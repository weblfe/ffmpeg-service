// Code generated by goctl. DO NOT EDIT!
// Source: exec.proto

//go:generate mockgen -destination ./executor_mock.go -package executor -source $GOFILE

package executor

import (
	"context"

	exec "github.com/weblfe/ffmpeg-service/rpc/exec/pb"

	"github.com/tal-tech/go-zero/core/jsonx"
	"github.com/tal-tech/go-zero/rpcx"
)

type (
	Executor interface {
		Exec(ctx context.Context, in *Request) (*Response, error)
	}

	defaultExecutor struct {
		cli rpcx.Client
	}
)

func NewExecutor(cli rpcx.Client) Executor {
	return &defaultExecutor{
		cli: cli,
	}
}

func (m *defaultExecutor) Exec(ctx context.Context, in *Request) (*Response, error) {
	var request exec.Request
	bts, err := jsonx.Marshal(in)
	if err != nil {
		return nil, errJsonConvert
	}

	err = jsonx.Unmarshal(bts, &request)
	if err != nil {
		return nil, errJsonConvert
	}

	client := exec.NewExecutorClient(m.cli.Conn())
	resp, err := client.Exec(ctx, &request)
	if err != nil {
		return nil, err
	}

	var ret Response
	bts, err = jsonx.Marshal(resp)
	if err != nil {
		return nil, errJsonConvert
	}

	err = jsonx.Unmarshal(bts, &ret)
	if err != nil {
		return nil, errJsonConvert
	}

	return &ret, nil
}
