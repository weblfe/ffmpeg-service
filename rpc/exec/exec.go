// Code generated by goctl. DO NOT EDIT!
// Source: exec.proto

package main

import (
	"flag"
	"fmt"
	"log"

	"github.com/weblfe/ffmpeg-service/rpc/exec/internal/config"
	"github.com/weblfe/ffmpeg-service/rpc/exec/internal/server"
	"github.com/weblfe/ffmpeg-service/rpc/exec/internal/svc"
	exec "github.com/weblfe/ffmpeg-service/rpc/exec/pb"

	"github.com/tal-tech/go-zero/core/conf"
	"github.com/tal-tech/go-zero/rpcx"
	"google.golang.org/grpc"
)

var configFile = flag.String("f", "etc/exec.yaml", "the config file")

func main() {
	flag.Parse()

	var c config.Config
	conf.MustLoad(*configFile, &c)
	ctx := svc.NewServiceContext(c)
	executorSrv := server.NewExecutorServer(ctx)

	s, err := rpcx.NewServer(c.RpcServerConf, func(grpcServer *grpc.Server) {
		exec.RegisterExecutorServer(grpcServer, executorSrv)
	})
	if err != nil {
		log.Fatal(err)
	}

	fmt.Printf("Starting rpc server at %s...\n", c.ListenOn)
	s.Start()
}
